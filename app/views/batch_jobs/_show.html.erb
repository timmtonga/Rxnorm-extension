<div class="row">
  <div class="col-md-9 col-md-offset-1">
    <table class="table table-striped table-bordered custab">
      <thead>
      <tr>
        <th>Searched Item</th>
        <th>Number of Matches</th>
        <th>Confirmed Match</th>
        <th>Status</th>
        <th style="text-align: center">Action</th>
      </tr>
      </thead>
      <tbody id="content-body">
      <% (@records || []).each do |search| %>
          <tr id="item-<%= search.id %>">
            <td><%= search.search_term %></td>
            <td style="text-align: center;"><%= search.matches %></td>
            <td><%= search.confirmed_match %></td>
            <td><%= search.display_status %></td>
            <td class="text-center">
              <%= link_to "<span class='glyphicon glyphicon-eye-open'></span> Verify".html_safe,
                          "/search_items/#{search.id}/edit",class: 'btn btn-info btn-xs',
                           'data-toggle' => 'modal', 'data-target'=> '#appModal', 'data-remote' => 'true' %>

            </td>
          </tr>
      <% end %>
      </tbody>
    </table>
  </div>
</div>


<script type="text/javascript">
    var waitingDialog = waitingDialog || (function ($) {
            'use strict';

            // Creating modal dialog's DOM
            var $dialog = $(
                '<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" style="padding-top:15%; overflow-y:visible;">' +
                '<div class="modal-dialog modal-m">' +
                '<div class="modal-content">' +
                '<div class="modal-header"><h3 style="margin:0;"></h3></div>' +
                '<div class="modal-body">' +
                '<div class="progress progress-striped active" style="margin-bottom:0;"><div class="progress-bar" style="width: 100%"></div></div>' +
                '</div>' +
                '</div></div></div>');

            return {
                /**
                 * Opens our dialog
                 * @param message Custom message
                 * @param options Custom options:
                 * 				  options.dialogSize - bootstrap postfix for dialog size, e.g. "sm", "m";
                 * 				  options.progressType - bootstrap postfix for progress bar type, e.g. "success", "warning".
                 */
                show: function (message, options) {
                    // Assigning defaults
                    if (typeof options === 'undefined') {
                        options = {};
                    }
                    if (typeof message === 'undefined') {
                        message = 'Loading';
                    }
                    var settings = $.extend({
                        dialogSize: 'm',
                        progressType: '',
                        onHide: null // This callback runs after the dialog was hidden
                    }, options);

                    // Configuring dialog
                    $dialog.find('.modal-dialog').attr('class', 'modal-dialog').addClass('modal-' + settings.dialogSize);
                    $dialog.find('.progress-bar').attr('class', 'progress-bar');
                    if (settings.progressType) {
                        $dialog.find('.progress-bar').addClass('progress-bar-' + settings.progressType);
                    }
                    $dialog.find('h3').text(message);
                    // Adding callbacks
                    if (typeof settings.onHide === 'function') {
                        $dialog.off('hidden.bs.modal').on('hidden.bs.modal', function (e) {
                            settings.onHide.call($dialog);
                        });
                    }
                    // Opening dialog
                    $dialog.modal();
                },
                /**
                 * Closes dialog
                 */
                hide: function () {
                    $dialog.modal('hide');
                }
            };

        })(jQuery);

    <% if @records.blank? %>
      $(document).ready(function() {
          waitingDialog.show('Processing batch search');
      } );
    <% end %>

    //setInterval("check_job_progress('/batch_jobs/show_update/<%= @job %>','addNewRows')",9000)
</script>